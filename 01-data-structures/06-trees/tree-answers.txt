1.
Min Binary Heap:
  Pacific Rim: 72
  Braveheart: 78
  Star Wars: Return of the Jedi: 80
  Donnie Darko: 85
  Inception: 86
  The Matrix: 87
  District 9: 90

Binary Tree
  The Matrix: 87
  Pacific Rim: 72
  District 9: 90
  Braveheart: 78
  Star Wars: Return of the Jedi: 80
  Donnie Darko: 85
  Inception: 86

The binary tree seems less organized than the min heap. It doesn't reorganize nodes already in the tree. The heap, however compares everything above where the item in question is entered.

2.
Answers edited for clarity, not timing.

Insertion Section:
                         user     system      total        real
Min Heap Insert:     0.810000   0.000000   0.810000 (  0.813576)
Binary Tree Insert:  0.490000   0.010000   0.500000 (  0.495946)

Find String Section:
                              user     system      total        real
Min Heap Find 50000:      0.060000   0.000000   0.060000 (  0.060201)
Binary Tree Find 50000:   0.090000   0.010000   0.100000 (  0.088169)

Find Integer Section:
                              user     system      total        real
Min Heap Find 50000:      0.060000   0.000000   0.060000 (  0.059971)
Binary Tree Find 50000:   0.000000   0.000000   0.000000 (  0.000019)

Delete Section:
                                user     system      total        real
Min Heap Delete 50000:      0.060000   0.000000   0.060000 (  0.060399)
Binary Title Delete 50000:  0.100000   0.000000   0.100000 (  0.103647)

To insert 100,000 places in a Min Heap takes 0.860000 seconds whereas inserting the same number into a Binary Tree takes only 0.480000 seconds. It takes 79% longer to insert a node into a Min Heap.

Finding the number 50,000 takes 0.060000 seconds in the Min Heap but takes 0.090000 seconds in the Binary Tree. It takes 33% longer so searching in the binary tree takes significantly longer.

Deleting the number 50,000 takes 0.060000 seconds in the Min Heap but takes 0.100000 seconds in the Binary Tree. It takes 66% longer.

I'd use a Binary Tree when it was mainly about storage inserting more data.

If you have to do more actions like finding and deleting data, using a Binary Heap makes more sense.
