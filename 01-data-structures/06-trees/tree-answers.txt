1.
Min Binary Heap:
  Pacific Rim: 72
  Braveheart: 78
  Star Wars: Return of the Jedi: 80
  Donnie Darko: 85
  Inception: 86
  The Matrix: 87
  District 9: 90

Binary Tree
  The Matrix: 87
  Pacific Rim: 72
  District 9: 90
  Braveheart: 78
  Star Wars: Return of the Jedi: 80
  Donnie Darko: 85
  Inception: 86

The binary tree seems less organized than the min heap. It doesn't reorganize nodes already in the tree. The heap, however compares everything above where the item in question is entered.

2.
Answers edited for clarity, not timing.

Insertion Section:
                         user     system      total        real
Min Heap Insert:     0.820000   0.000000   0.820000 (  0.830068)
Binary Tree Insert:  0.480000   0.010000   0.490000 (  0.488466)

Find Section:
                              user     system      total        real
Min Heap Find 50000:      0.130000   0.010000   0.140000 (  0.134357)
Binary Tree Find 50000:   0.000000   0.000000   0.000000 (  0.000025)

Delete Section:
                               user     system      total        real
Min Heap Delete 50000:     0.060000   0.000000   0.060000 (  0.059523)
Binary Tree Delete 50000:  0.000000   0.000000   0.000000 (  0.000017)

The Binary Tree is faster in every single test but the `Find` and `Delete` function tests don't feel right. They're too fast. If I didn't have the RSpec tests to be sure they were doing their jobs, I'd think they were faked.

Given this, I'm not sure when it would be appropriate to use a Heap over a Binary Tree to hold data.
